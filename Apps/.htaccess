# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with about us.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with ap music.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]






# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with ap tv.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]







# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with android apps.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with android games.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with call of duty mobile.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with contact us.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with gallery.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with index.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with links.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with linux apps.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with mac apps.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with mac games.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with other.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with page2.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with privacy-policy.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with services.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with terms and conditions.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with userinfo.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with windows apps.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with windows games.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]






# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with ap tube.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]





# mod_rewrite starts here

RewriteEngine on

# does not apply to existing directories, meaning that if the folder exists on the server then don't change anything and don't run the Rule!

RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with ap videotube2.html extension

RewriteCond %{REQUEST_FILENAME}\.html -f

# Here we actually show the page that has the .html extension

RewriteRule ^(.*)$ $1.html [NC,L]

